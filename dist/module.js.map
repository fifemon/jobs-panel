{"version":3,"sources":["../src/module.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,aAAS,gBAAT,CAA0B,KAA1B,EAAiC,KAAjC,EAAwC;AACpC,YAAI,EAAJ;AACA,YAAI,QAAQ,KAAZ,EAAmB;AACf,iBAAG,+DAAH;AACH,SAFD,MAEO,IAAI,QAAQ,QAAM,GAAlB,EAAuB;AAC1B,iBAAG,qEAAH;AACH,SAFM,MAEA;AACH,iBAAG,EAAH;AACH;AACD,eAAO,EAAP;AACH;;;;AAdO,4B,kBAAA,gB;;AACD,a;;AACA,kB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qDAcM,Q;;;AAEX,kCAAY,MAAZ,EAAoB,SAApB,EAA+B,UAA/B,EAA2C,WAA3C,EAAwD;AAAA;;AAAA,4GAChD,MADgD,EACxC,SADwC;;AAEtD,0BAAK,UAAL,GAAkB,UAAlB;AACA,0BAAK,WAAL,GAAmB,WAAnB;;AAEA,wBAAI,gBAAgB;AAChB,8BAAM,GADU;AAEhB,gCAAQ,IAFQ;AAGhB,mCAAW,aAHK;AAIhB,mCAAW,KAJK;AAKhB,oCAAY,IALI;AAMhB,iCAAS,CACL,EAAC,MAAM,iBAAP,EAA0B,OAAM,EAAhC,EADK,CANO;AAShB,iCAAS,CACL,EAAC,MAAM,QAAP,EAAiB,OAAO,OAAxB,EAAiC,QAAQ,OAAzC;AACI,mCAAO,eADX,EADK,EAGL,EAAC,MAAM,QAAP,EAAiB,OAAO,QAAxB,EAAkC,QAAQ,QAA1C;AACI,mCAAO,sCADX,EAHK,EAKL,EAAC,MAAM,aAAP,EAAsB,OAAO,aAA7B,EAA4C,QAAQ,MAApD;AACI,mCAAO,wBADX,EALK,EAOL,EAAC,MAAM,aAAP,EAAsB,OAAO,qBAA7B,EAAoD,QAAQ,QAA5D;AACI,sCAAU,CADd,EACiB,OAAO,CADxB;AAEI,mCAAO,+BAFX,EAPK,EAUL,EAAC,MAAM,WAAP,EAAmB,OAAO,eAA1B,EAA2C,QAAQ,QAAnD;AACI,sCAAU,CADd,EACiB,OAAO,CADxB;AAEI,mCAAO,6BAFX,EAVK,EAaL,EAAC,MAAM,WAAP,EAAmB,OAAO,UAA1B,EAAsC,QAAQ,QAA9C;AACI,sCAAU,CADd,EACiB,OAAO,CADxB;AAEI,mCAAO,iCAFX,EAbK,EAgBL,EAAC,MAAM,YAAP,EAAqB,OAAO,YAA5B,EAA0C,QAAQ,QAAlD;AACI,sCAAU,CADd,EACiB,OAAO,CADxB;AAEI,mCAAO,sCAFX,EAhBK;AATO,qBAApB;AA8BA,sBAAE,QAAF,CAAW,MAAK,KAAhB,EAAuB,aAAvB;;AAEA,0BAAK,IAAL,GAAY,EAAZ;AACA,0BAAK,IAAL,GAAY,CAAZ;AACA,0BAAK,WAAL,GAAmB,CAAnB;AACA,0BAAK,SAAL,GAAiB,CAAjB;AACA,0BAAK,cAAL,GAAsB,MAAK,KAAL,CAAW,OAAX,CAAmB,CAAnB,CAAtB;AACA,0BAAK,WAAL,GAAmB,MAAK,cAAL,CAAoB,KAAvC;;AAEA,0BAAK,MAAL,CAAY,EAAZ,CAAe,eAAf,EAAgC,MAAK,cAAL,CAAoB,IAApB,OAAhC;AACA,0BAAK,MAAL,CAAY,EAAZ,CAAe,gBAAf,EAAiC,MAAK,cAAL,CAAoB,IAApB,OAAjC;AA7CsD;AA8CvD;;;;qDAEgB;AACf,6BAAK,YAAL,CAAkB,SAAlB,EAA6B,+CAA7B,EAA8E,CAA9E;AACA,6BAAK,YAAL,CAAkB,SAAlB,EAA6B,uDAA7B,EAAsF,CAAtF;AACD;;;iDAEY,U,EAAY;AACrB,6BAAK,eAAL;AACA,6BAAK,UAAL,GAAgB,UAAhB;AACA,+BAAO,WAAW,KAAX,CAAiB,WAAW,YAAX,CAAwB,gBAAxB,KAA2C,GAA3C,GAA+C,SAAhE,EAA0E,KAAK,cAAL,EAA1E,EAAiG,IAAjG,CAAsG,UAAS,GAAT,EAAc;AACvH,mCAAO,EAAC,MAAM,GAAP,EAAP;AACH,yBAFM,CAAP;AAGH;;;mDAEc,I,EAAM;AACjB,4BAAI,IAAJ,EAAU;AACN,iCAAK,IAAL,GAAY,KAAK,IAAL,CAAU,IAAtB;AACA,iCAAK,SAAL,GAAiB,KAAK,IAAL,CAAU,KAA3B;AACA,iCAAK,IAAL,GAAY,KAAK,IAAL,CAAU,MAAtB;AACA,iCAAK,WAAL,GAAmB,KAAK,SAAL,GAAiB,KAAK,IAAzC;AACH,yBALD,MAKO;AACH,iCAAK,IAAL,GAAY,EAAZ;AACA,iCAAK,SAAL,GAAiB,CAAjB;AACA,iCAAK,IAAL,GAAY,CAAZ;AACA,iCAAK,WAAL,GAAmB,CAAnB;AACH;AACD,6BAAK,MAAL,CAAY,KAAK,IAAjB;AACH;;;6CAEQ;AACL,0GAAoB,KAAK,IAAzB;AACH;;;+CAEU,K,EAAO;AACd,4BAAI,UAAU,KAAK,KAAL,CAAW,SAAzB,EAAoC;AAChC,iCAAK,KAAL,CAAW,SAAX,GAAuB,KAAK,KAAL,CAAW,SAAX,KAAyB,KAAzB,GAAiC,MAAjC,GAA0C,KAAjE;AACH,yBAFD,MAEO;AACH,iCAAK,KAAL,CAAW,SAAX,GAAuB,KAAvB;AACA,iCAAK,KAAL,CAAW,SAAX,GAAuB,KAAvB;AACH;AACD,6BAAK,OAAL;AACH;;;mDAEc;AACX,6BAAK,WAAL,GAAmB,KAAK,cAAL,CAAoB,KAAvC;AACA,6BAAK,OAAL;AACH;;;+CAEU;AACP,6BAAK,KAAL,CAAW,OAAX,CAAmB,IAAnB,CAAwB,EAAC,MAAK,EAAN,EAAS,OAAM,EAAf,EAAxB;AACH;;;gDAEW,K,EAAO;AACf,4BAAI,KAAK,KAAL,CAAW,OAAX,CAAmB,MAAnB,GAA4B,KAAhC,EAAuC;AACnC,iCAAK,KAAL,CAAW,OAAX,CAAmB,MAAnB,CAA0B,KAA1B,EAAgC,CAAhC;AACH;AACJ;;;gDAEW,K,EAAO;AACf,4BAAI,KAAK,KAAL,CAAW,OAAX,CAAmB,MAAnB,GAA4B,KAA5B,IAAqC,QAAQ,CAAjD,EAAoD;AAChD,gCAAI,MAAM,KAAK,KAAL,CAAW,OAAX,CAAmB,KAAnB,CAAV;AACA,iCAAK,KAAL,CAAW,OAAX,CAAmB,KAAnB,IAA0B,KAAK,KAAL,CAAW,OAAX,CAAmB,QAAM,CAAzB,CAA1B;AACA,iCAAK,KAAL,CAAW,OAAX,CAAmB,QAAM,CAAzB,IAA4B,GAA5B;AACH;AACJ;;;kDAEa,K,EAAO;AACjB,4BAAI,KAAK,KAAL,CAAW,OAAX,CAAmB,MAAnB,GAA4B,QAAM,CAAlC,IAAuC,SAAS,CAApD,EAAuD;AACnD,gCAAI,MAAM,KAAK,KAAL,CAAW,OAAX,CAAmB,KAAnB,CAAV;AACA,iCAAK,KAAL,CAAW,OAAX,CAAmB,KAAnB,IAA0B,KAAK,KAAL,CAAW,OAAX,CAAmB,QAAM,CAAzB,CAA1B;AACA,iCAAK,KAAL,CAAW,OAAX,CAAmB,QAAM,CAAzB,IAA4B,GAA5B;AACH;AACJ;;;gDAEW;AACR,6BAAK,KAAL,CAAW,OAAX,CAAmB,IAAnB,CAAwB,EAAC,MAAK,EAAN,EAAS,OAAM,EAAf,EAAkB,QAAO,QAAzB,EAAkC,OAAM,EAAxC,EAAxB;AACA,6BAAK,OAAL;AACH;;;iDAEY,K,EAAO;AAChB,4BAAI,KAAK,KAAL,CAAW,OAAX,CAAmB,MAAnB,GAA4B,KAAhC,EAAuC;AACnC,iCAAK,KAAL,CAAW,OAAX,CAAmB,MAAnB,CAA0B,KAA1B,EAAgC,CAAhC;AACH;AACD,6BAAK,OAAL;AACH;;;iDAEY,K,EAAO;AAChB,4BAAI,KAAK,KAAL,CAAW,OAAX,CAAmB,MAAnB,GAA4B,KAA5B,IAAqC,QAAQ,CAAjD,EAAoD;AAChD,gCAAI,MAAM,KAAK,KAAL,CAAW,OAAX,CAAmB,KAAnB,CAAV;AACA,iCAAK,KAAL,CAAW,OAAX,CAAmB,KAAnB,IAA0B,KAAK,KAAL,CAAW,OAAX,CAAmB,QAAM,CAAzB,CAA1B;AACA,iCAAK,KAAL,CAAW,OAAX,CAAmB,QAAM,CAAzB,IAA4B,GAA5B;AACH;AACD,6BAAK,OAAL;AACH;;;mDAEc,K,EAAO;AAClB,4BAAI,KAAK,KAAL,CAAW,OAAX,CAAmB,MAAnB,GAA4B,QAAM,CAAlC,IAAuC,SAAS,CAApD,EAAuD;AACnD,gCAAI,MAAM,KAAK,KAAL,CAAW,OAAX,CAAmB,KAAnB,CAAV;AACA,iCAAK,KAAL,CAAW,OAAX,CAAmB,KAAnB,IAA0B,KAAK,KAAL,CAAW,OAAX,CAAmB,QAAM,CAAzB,CAA1B;AACA,iCAAK,KAAL,CAAW,OAAX,CAAmB,QAAM,CAAzB,IAA4B,GAA5B;AACH;AACD,6BAAK,OAAL;AACH;;;yCAEI,K,EAAO,I,EAAM,K,EAAO,I,EAAM;AAC3B,4BAAI,IAAJ;AACA,4BAAI,QAAQ,KAAK,KAAjB;AACA,4BAAI,YAAY,CAAhB;;AAEA,iCAAS,cAAT,GAA0B;AACtB,gCAAI,cAAc,KAAK,MAAvB;AACA;;;AAGA,mCAAQ,cAAc,EAAf,GAAqB,IAA5B;AACH;;AAED,iCAAS,WAAT,GAAuB;AACnB,gCAAI,OAAO,KAAK,IAAL,CAAU,qBAAV,CAAX;AACA,iCAAK,GAAL,CAAS,EAAC,cAAc,MAAM,MAAN,GAAe,gBAAf,GAAkC,EAAjD,EAAT;;AAEA,gCAAI,QAAQ,KAAK,IAAL,CAAU,OAAV,CAAZ;AACA,wCAAY,KAAZ;AACH;;AAED,iCAAS,WAAT,CAAqB,KAArB,EAA4B;AACxB,kCAAM,KAAN;AACA,gCAAI,OAAO,EAAX;AACA,iCAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,MAAzB,EAAiC,GAAjC,EAAsC;AAClC,wCAAQ,gBAAgB,KAAK,CAAL,CAAhB,EAAwB,MAAI,CAA5B,CAAR;AACH;AACD,kCAAM,IAAN,CAAW,IAAX;AACH;;AAED,iCAAS,eAAT,CAAyB,IAAzB,EAAqD;AAAA,gCAAtB,YAAsB,yDAAP,KAAO;;AACjD,qCAAS,UAAT,CAAoB,IAApB,EAA0B;AACtB,uCAAQ,OAAO,IAAP,EAAa,MAAb,CAAoB,qBAApB,CAAR;AACH;;AAED,gCAAI,OAAO,MAAX;;AAEA,iCAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,MAAM,OAAN,CAAc,MAAlC,EAA0C,GAA1C,EAA+C;AAC3C,wCAAQ,MAAR;AACA,oCAAI,MAAM,MAAM,OAAN,CAAc,CAAd,CAAV;AACA,oCAAI,IAAI,KAAJ,IAAa,KAAK,OAAtB,EAA+B;AAC3B,wCAAI,MAAM,KAAK,OAAL,CAAa,IAAI,KAAjB,CAAV;AACA,4CAAQ,IAAI,MAAZ;AACI,6CAAK,OAAL;AACI,oDAAQ,oFAAkF,KAAK,OAAL,CAAa,KAA/F,GAAqG,QAArG,GAA8G,OAAO,KAAK,OAAL,CAAa,WAApB,EAAiC,MAAjC,CAAwC,GAAxC,CAA9G,GAA2J,MAA3J,GAAkK,KAAK,QAAL,CAAc,EAAhL,GAAmL,IAAnL,GAAwL,KAAK,OAAL,CAAa,KAArM,GAA2M,MAAnN;AACA;AACJ,6CAAK,MAAL;AACI,oDAAQ,WAAW,GAAX,CAAR;AACA;AACJ,6CAAK,QAAL;AACI,gDAAI,WAAW,GAAf,EAAoB;AAChB,sDAAM,MAAM,IAAI,KAAhB;AACH;AACD,gDAAI,cAAc,GAAlB,EAAuB;AACnB,wDAAQ,IAAI,OAAJ,CAAY,IAAI,QAAhB,CAAR;AACH,6CAFD,MAEO;AACH,wDAAQ,IAAI,OAAJ,CAAY,CAAZ,CAAR;AACH;AACD;AACJ;AACI,oDAAQ,GAAR;AAlBR;AAoBH,iCAtBD,MAsBO;AACH,4CAAQ,SAAR;AACH;AACD;AACA;AACA;AACA,oCAAI,YAAY,EAAhB;AACA,oCAAI,YAAJ,EAAkB;AACd,gDAAY,yCAAyC,IAAI,IAA7C,GAAoD,QAAhE;AACH;;AAED,wCAAQ,YAAU,OAAlB;AACH;;AAED,oCAAQ,OAAR;AACA,mCAAO,IAAP;AACH;;AAGD,6BAAK,MAAL,CAAY,EAAZ,CAAe,QAAf,EAAyB,UAAS,UAAT,EAAqB;AAC1C,mCAAO,cAAc,IAArB;AACA,gCAAI,IAAJ,EAAU;AACN;AACH;AACD,iCAAK,kBAAL;AACH,yBAND;AAOH;;;qDAEgB;AACb,4BAAI,IAAI,GAAR;AACA,4BAAI,KAAK,KAAL,CAAW,OAAX,CAAmB,CAAnB,EAAsB,KAA1B,EAAiC;AAC7B,gCAAI,KAAK,WAAL,CAAiB,OAAjB,CAAyB,KAAK,KAAL,CAAW,OAAX,CAAmB,CAAnB,EAAsB,KAA/C,EAAsD,KAAK,KAAL,CAAW,UAAjE,CAAJ;AACH;AACD,4BAAI,KAAK,WAAL,KAAqB,EAAzB,EAA6B;AACzB,iCAAK,WAAW,KAAK,WAAhB,GAA8B,GAAnC;AACH;;AAED,4BAAI,OAAO,KAAK,QAAL,CAAc,IAAzB;AACA,4BAAI,KAAK,KAAK,QAAL,CAAc,EAAvB;;AAEA,4BAAI,OAAO,EAAX;AACA,6BAAK,KAAK,KAAL,CAAW,SAAhB,IAA6B,KAAK,KAAL,CAAW,SAAxC;;AAEA,4BAAI,OAAO;AACP,oCAAQ,KAAK,KAAL,CAAW,IADZ;AAEP,qCAAS;AACL,gDAAgB;AACZ,6CAAS,CADG;AAEZ,gEAA4B;AAFhB;AADX,6BAFF;AAQP,oCAAQ,CACJ,IADI,EAEJ,QAFI;AARD,yBAAX;AAaA,+BAAO,IAAP;AACH;;;;cAhR2B,gB;;;;AAoR9B,qBAAS,WAAT,GAAuB,aAAvB;;iCAGE,Q","file":"module.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nfunction background_style(value, limit) {\n    var bg;\n    if (value > limit) {\n        bg=' style=\"background-color:rgba(245, 54, 54, 0.9);color: white\"';\n    } else if (value > limit*0.9) {\n        bg=' style=\"background-color:rgba(237, 129, 40, 0.890196);color: black\"';\n    } else {\n        bg='';\n    }\n    return bg;\n}\n\nexport class JobsCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $rootScope, templateSrv) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n    this.templateSrv = templateSrv;\n\n    var panelDefaults = {\n        size: 100,\n        scroll: true,\n        sortField: 'submit_date',\n        sortOrder: 'asc',\n        filterable: true,\n        queries: [\n            {name: \"-- no filter --\", query:\"\"}\n        ],\n        columns: [\n            {name: \"Job ID\", field: \"jobid\", format: 'jobid',\n                title: \"JobSub job ID\"},\n            {name: \"Status\", field: \"status\", format: 'string',\n                title: \"Job Status (1=idle,2=running,5=held)\"},\n            {name: \"Submit Time\", field: \"submit_date\", format: 'date',\n                title: \"Time job was sumbitted\"},\n            {name: \"Memory (MB)\", field: \"ResidentSetSize_RAW\", format: 'number',\n                decimals: 2, scale: 1,\n                title: \"Max used and requested memory\"},\n            {name: \"Disk (MB)\",field: \"DiskUsage_RAW\", format: 'number',\n                decimals: 2, scale: 1,\n                title: \"Max used and requested disk\"},\n            {name: \"Time (hr)\",field: \"walltime\", format: 'number',\n                decimals: 2, scale: 1,\n                title: \"Max used and requested walltime\"},\n            {name: \"Efficiency\", field: \"efficiency\", format: 'number',\n                decimals: 2, scale: 1,\n                title: \"CPU efficiency (CPU time / walltime)\"}\n        ]\n    };\n    _.defaults(this.panel, panelDefaults);\n\n    this.data = [];\n    this.docs = 0;\n    this.docsMissing = 0;\n    this.docsTotal = 0;\n    this.selectedFilter = this.panel.queries[0];\n    this.filterQuery = this.selectedFilter.query;\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/fifemon-jobs-panel/editor.html', 2);\n    this.addEditorTab('Columns', 'public/plugins/fifemon-jobs-panel/editor_columns.html', 3);\n  }\n\n  issueQueries(datasource) {\n      this.updateTimeRange();\n      this.datasource=datasource;\n      return datasource._post(datasource.indexPattern.getIndexForToday()+'/'+'_search',this.get_jobs_query()).then(function(res) {\n          return {data: res};\n      });\n  }\n\n  onDataReceived(data) {\n      if (data) {\n          this.data = data.hits.hits;\n          this.docsTotal = data.hits.total;\n          this.docs = this.data.length;\n          this.docsMissing = this.docsTotal - this.docs;\n      } else {\n          this.data = [];\n          this.docsTotal = 0;\n          this.docs = 0;\n          this.docsMissing = 0;\n      }\n      this.render(this.data);\n  }\n\n  render() {\n      return super.render(this.data);\n  }\n\n  toggleSort(field) {\n      if (field === this.panel.sortField) {\n          this.panel.sortOrder = this.panel.sortOrder === 'asc' ? 'desc' : 'asc';\n      } else {\n          this.panel.sortField = field;\n          this.panel.sortOrder = 'asc';\n      }\n      this.refresh();\n  }\n\n  updateFilter() {\n      this.filterQuery = this.selectedFilter.query;\n      this.refresh();\n  }\n\n  addQuery() {\n      this.panel.queries.push({name:'',query:''});\n  }\n\n  removeQuery(index) {\n      if (this.panel.queries.length > index) {\n          this.panel.queries.splice(index,1);\n      }\n  }\n\n  moveQueryUp(index) {\n      if (this.panel.queries.length > index && index > 0) {\n          var tmp = this.panel.queries[index];\n          this.panel.queries[index]=this.panel.queries[index-1];\n          this.panel.queries[index-1]=tmp;\n      }\n  }\n\n  moveQueryDown(index) {\n      if (this.panel.queries.length > index-1 && index >= 0) {\n          var tmp = this.panel.queries[index];\n          this.panel.queries[index]=this.panel.queries[index+1];\n          this.panel.queries[index+1]=tmp;\n      }\n  }\n\n  addColumn() {\n      this.panel.columns.push({name:'',field:'',format:'string',title:''});\n      this.refresh();\n  }\n\n  removeColumn(index) {\n      if (this.panel.columns.length > index) {\n          this.panel.columns.splice(index,1);\n      }\n      this.refresh();\n  }\n\n  moveColumnUp(index) {\n      if (this.panel.columns.length > index && index > 0) {\n          var tmp = this.panel.columns[index];\n          this.panel.columns[index]=this.panel.columns[index-1];\n          this.panel.columns[index-1]=tmp;\n      }\n      this.refresh();\n  }\n\n  moveColumnDown(index) {\n      if (this.panel.columns.length > index-1 && index >= 0) {\n          var tmp = this.panel.columns[index];\n          this.panel.columns[index]=this.panel.columns[index+1];\n          this.panel.columns[index+1]=tmp;\n      }\n      this.refresh();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n      var data;\n      var panel = ctrl.panel;\n      var pageCount = 0;\n\n      function getTableHeight() {\n          var panelHeight = ctrl.height;\n          /*if (pageCount > 1) {\n              panelHeight -= 26;\n          }*/\n          return (panelHeight - 31) + 'px';\n      }\n\n      function renderPanel() {\n          var root = elem.find('.table-panel-scroll');\n          root.css({'max-height': panel.scroll ? getTableHeight() : ''});\n\n          var tbody = elem.find('tbody');\n          renderTable(tbody);\n      }\n\n      function renderTable(tbody) {\n          tbody.empty();\n          var html = '';\n          for (var i = 0; i < data.length; i++) {\n              html += renderActiveRow(data[i],i===0);\n          }\n          tbody.html(html);\n      }\n\n      function renderActiveRow(data, addWidthHack = false) {\n          function formatDate(date) {\n              return  moment(date).format('ddd MMM DD HH:mm ZZ');\n          }\n\n          var html = '<tr>';\n\n          for (var i = 0; i < panel.columns.length; i++) {\n              html += '<td>';\n              var col = panel.columns[i];\n              if (col.field in data._source) {\n                  var val = data._source[col.field];\n                  switch (col.format) {\n                      case 'jobid':\n                          html += '<a style=\"text-decoration:underline;\" href=\"dashboard/db/job-details?var-jobid='+data._source.jobid+'&from='+moment(data._source.submit_date).format('x')+'&to='+ctrl.rangeRaw.to+'\">'+data._source.jobid+'</a>';\n                          break;\n                      case 'date':\n                          html += formatDate(val);\n                          break;\n                      case 'number':\n                          if ('scale' in col) {\n                              val = val * col.scale;\n                          }\n                          if ('decimals' in col) {\n                              html += val.toFixed(col.decimals);\n                          } else {\n                              html += val.toFixed(0);\n                          }\n                          break;\n                      default:\n                          html += val;\n                  }\n              } else {\n                  html += '&mdash;';\n              }\n              // because of the fixed table headers css only solution\n              // there is an issue if header cell is wider the cell\n              // this hack adds header content to cell (not visible)\n              var widthHack = '';\n              if (addWidthHack) {\n                  widthHack = '<div class=\"table-panel-width-hack\">' + col.name + '</div>';\n              }\n\n              html += widthHack+'</td>';\n          }\n\n          html += '</tr>';\n          return html;\n      }\n\n\n      ctrl.events.on('render', function(renderData) {\n          data = renderData || data;\n          if (data) {\n              renderPanel();\n          }\n          ctrl.renderingCompleted();\n      });\n  }\n\n  get_jobs_query() {\n      var q = '*';\n      if (this.panel.targets[0].query) {\n          q = this.templateSrv.replace(this.panel.targets[0].query, this.panel.scopedVars);\n      }\n      if (this.filterQuery !== '') {\n          q += ' AND (' + this.filterQuery + ')';\n      }\n\n      var from = this.rangeRaw.from;\n      var to = this.rangeRaw.to;\n\n      var sort = {};\n      sort[this.panel.sortField] = this.panel.sortOrder;\n\n      var data = {\n          \"size\": this.panel.size,\n          \"query\": {\n              \"query_string\": {\n                  \"query\": q,\n                  \"lowercase_expanded_terms\": false\n              }\n          },\n          \"sort\": [\n              sort,\n              \"_score\"\n              ]\n      };\n      return data;\n  }\n\n}\n\nJobsCtrl.templateUrl = 'module.html';\n\nexport {\n  JobsCtrl as PanelCtrl\n};\n\n"]}